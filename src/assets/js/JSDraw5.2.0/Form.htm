<!--
//////////////////////////////////////////////////////////////////////////////////
//
// JSDraw
// Copyright 2016,  Scilligence 
// http://www.scilligence.com/
//
//////////////////////////////////////////////////////////////////////////////////
-->
<!DOCTYPE html>
<html>
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge" >
<title>JSDraw Form</title>

<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/dojo/1.11.2/dojo/dojo.js"></script>
<script type="text/javascript" src='Scilligence.JSDraw2.Pro.js'></script>
<script type="text/javascript" src='Service.aspx'></script>
<script type="text/javascript" src='Scilligence.JSDraw2.Resources.js'></script>
<script type="text/javascript">
    JSDraw2.defaultoptions = { skin: "w8" };
</script>


</head>
<body>


<h1>Building Chemistry/Biology Form with JSDraw</h1>
<p>JSDraw is not only a Cheminformatics and Bioinformatics algorithm library to draw, display and process chemical and biological
structures but also a web application development framework to make it easy to develop Chemsitry/Biology web application.
Below please find some examples on building web forms with JSDraw.</p>

<ul>
<li><a href='http://www.scilligence.com/sdk/jsdraw/'>JSDraw API</a></li>
<li><a href='http://www.elncloud.com/jsdrawapp/jsdraw/'>JSDraw Demo Pages</a></li>
<li><a href='http://www.scilligence.com/web/download.aspx?prod=JSDraw'>Download JSDraw</a></li>
</ul>




<hr />
<h3>Dialog Form</h3>
<button onclick="showDialog()">Show Dialog</button>
<script type="text/javascript">
    function showDialog() {
        var columns = {
            structure: { label: "Structure", type: "jsdraw", width: 800 },
            name: { label: "Compound Name", type: "input", width: 800 },
            vendor: { label: "Vendor", type: "select", options: ["Company A", "Company B"], width: 300 },
            amount: { label: "Amount", type: "number", unit: "g", width: 200 }
        };

        var dlg = scil.Form.createDlgForm("JSDraw Form", columns, { label: "OK", onclick: function() {
            var data = dlg.form.getData();
            scil.Utils.alert("Compound Name = " + data.name);
        }
        });
    }
</script>
<div><br />Source Code:</div>
<pre style="background:#eee;margin-top:0">
&lt;button onclick="showDialog()"&gt;Show Dialog&lt;/button&gt;
&lt;script type="text/javascript"&gt;
    function showDialog() {
        var columns = {
            structure: { label: "Structure", type: "jsdraw", width: 800 },
            name: { label: "Compound Name", type: "input", width: 800 },
            vendor: { label: "Vendor", type: "select", options: ["Company A", "Company B"], width: 300 },
            amount: { label: "Amount", type: "number", unit: "g", width: 200 }
        };

        var dlg = scil.Form.createDlgForm("JSDraw Form", columns, { label: "OK", onclick: function () {
            var data = dlg.form.getData();
            scil.Utils.alert("Compound Name = " + data.name);
        }
        });
    }
&lt;/script&gt;
</pre>
<br /><br /><br />


<hr />
<h3>Inline Form</h3>
<div id='Div1'></div>
<script type="text/javascript">
    scil.ready(function() {
        var columns = {
            structure: { label: "Structure", type: "jsdraw", required: true, width: 800 },
            name: { label: "Compound Name", type: "input", required: true, width: 800 },
            vendor: { label: "Vendor", type: "select", options: ["Company A", "Company B"], width: 300 },
            amount: { label: "Amount", type: "number", unit: "g", width: 200 }
        };
        var form = new scil.Form();
        form.render(scil.byId("Div1"), columns, { immediately: true });
    });
</script>
<div><br />Source Code:</div>
<pre style="background:#eee;margin-top:0">
&lt;div id='Div1'&gt;&lt;/div&gt;
&lt;script type="text/javascript"&gt;
    scil.ready(function () {
        var columns = {
            structure: { label: "Structure", type: "jsdraw", required: true, width: 800 },
            name: { label: "Compound Name", type: "input", required: true, width: 800 },
            vendor: { label: "Vendor", type: "select", options: ["Company A", "Company B"], width: 300 },
            amount: { label: "Amount", type: "number", unit: "g", width: 200 }
        };
        var form = new scil.Form();
        form.render(scil.byId("Div1"), columns, { immediately: true });
    });
&lt;/script&gt;
</pre>
<br /><br /><br />


<hr />
<h3>Biological Sequence Form</h3>
<div id='Div2'></div>
<script type="text/javascript">
    scil.ready(function() {
        var columns = {
            sequence: { label: "Sequence", type: "jsdraw.se", width: 800, height: 200 },
            expiration: { label: "Expiration", type: "date", width: 200 }
        };
        new scil.Form().render(scil.byId("Div2"), columns, { immediately: true });
    });
</script>
<div><br />Source Code:</div>
<pre style="background:#eee;margin-top:0">
&lt;div id='Div2'&gt;&lt;/div&gt;
&lt;script type="text/javascript"&gt;
    scil.ready(function () {
        var columns = {
            sequence: { label: "Sequence", type: "jsdraw.se", width: 800, height: 200 },
            expiration: { label: "Expiration", type: "date", width: 200 }
        };
        new scil.Form().render(scil.byId("Div2"), columns, { immediately: true });
    });
&lt;/script&gt;
</pre>
<br /><br /><br />


<hr />
<h3>Table</h3>
<div id='Div3'></div>
<script type="text/javascript">
    scil.ready(function() {
        var columns = {
            user: { label: "User", type: "input", width: 300 },
            role: { label: "Role", type: "select", options: ["", "Member", "Manager"], width: 300 }
        };
        var table = new scil.Table(false, true);
        table.render("Div3", columns);
        table.setData([{ user: "Tony", role: "Member" }, { user: "Jack", role: "Manager"}]);
    });
</script>
<div><br />Source Code:</div>
<pre style="background:#eee;margin-top:0">
&lt;div id='Div3'&gt;&lt;/div&gt;
&lt;script type="text/javascript"&gt;
    scil.ready(function () {
        var columns = {
            user: { label: "User", type: "input", width: 300 },
            role: { label: "Role", type: "select", options: ["", "Member", "Manager"], width: 300 }
        };
        var table = new scil.Table(false, true);
        table.render("Div3", columns);
        table.setData([{ user: "Tony", role: "Member" }, { user: "Jack", role: "Manager"}]);
    });
&lt;/script&gt;
</pre>
<br /><br /><br />


<hr />
<h3>Table in Form</h3>
<div id='Div4'></div>
<script type="text/javascript">
    scil.ready(function() {
        var columns = {
            name: { label: "Compound Name", type: "input", width: 800 },
            vendor: { label: "Vendor", type: "select", options: ["Company A", "Company B"], width: 300 },
            amount: { label: "Amount", type: "number", unit: "g", width: 200 },
            table: { label: "Table", type: "table", columns: {
                user: { label: "User", type: "input", width: 300 },
                role: { label: "Role", type: "select", options: ["", "Member", "Manager"], width: 300 }
            }
            }
        };
        var form = new scil.Form();
        form.render(scil.byId("Div4"), columns, { immediately: true });
    });
</script>
<div><br />Source Code:</div>
<pre style="background:#eee;margin-top:0">
&lt;div id='Div4'&gt;&lt;/div&gt;
&lt;script type="text/javascript"&gt;
    scil.ready(function () {
        var columns = {
            name: { label: "Compound Name", type: "input", width: 800 },
            vendor: { label: "Vendor", type: "select", options: ["Company A", "Company B"], width: 300 },
            amount: { label: "Amount", type: "number", unit: "g", width: 200 },
            table: { label: "Table", type: "table", columns: {
                user: { label: "User", type: "input", width: 300 },
                role: { label: "Role", type: "select", options: ["", "Member", "Manager"], width: 300 }
            }
            }
        };
        var form = new scil.Form();
        form.render(scil.byId("Div4"), columns, { immediately: true });
    });
&lt;/script&gt;
</pre>
<br /><br /><br />


<hr />
<h3>JSdraw.Table in Form</h3>
<div id='Div5'></div>
<script type="text/javascript">
    scil.ready(function() {
        var columns = {
            name: { label: "Compound Name", type: "input", width: 800 },
            vendor: { label: "Vendor", type: "select", options: ["Company A", "Company B"], width: 300 },
            amount: { label: "Amount", type: "number", unit: "g", width: 200 },
            table: { label: "Table", type: "jsdraw.table", options: { columns: {
                stucture: { label: "Structure", type: "structure", width: 300 },
                user: { label: "User", type: "input", width: 200 },
                role: { label: "Role", type: "select", options: ["", "Member", "Manager"], width: 200 }
            }
            }
            }
        };
        var form = new scil.Form();
        form.render(scil.byId("Div5"), columns, { immediately: true });
    });
</script>
<div><br />Source Code:</div>
<pre style="background:#eee;margin-top:0">
&lt;div id='Div5'&gt;&lt;/div&gt;
&lt;script type="text/javascript"&gt;
    scil.ready(function () {
        var columns = {
            name: { label: "Compound Name", type: "input", width: 800 },
            vendor: { label: "Vendor", type: "select", options: ["Company A", "Company B"], width: 300 },
            amount: { label: "Amount", type: "number", unit: "g", width: 200 },
            table: { label: "Table", type: "jsdraw.table", options: { columns: {
                stucture: { label: "Structure", type: "structure", width: 300 },
                user: { label: "User", type: "input", width: 200 },
                role: { label: "Role", type: "select", options: ["", "Member", "Manager"], width: 200 }
            }
            }
            }
        };
        var form = new scil.Form();
        form.render(scil.byId("Div5"), columns, { immediately: true });
    });
&lt;/script&gt;
</pre>
<br /><br /><br />


<hr />
<h3>Progress Dialog</h3>
<button onclick='showprogress()'>Show Progress Dialog</button><br />
<script type="text/javascript">
    var timer = null;
    function showprogress() {
        scilligence.Progress.show("Running", function() { alert("cancelled"); });
        scilligence.Progress.update(0, "Value ")
        var count = 0;
        clearInterval(timer);
        timer = setInterval(function() { scilligence.Progress.update(++count, "Value " + count); }, 500);
    }
</script>
<div><br />Source Code:</div>
<pre style="background:#eee;margin-top:0">
&lt;button onclick='showprogress()'&gt;Show Progress Dialog&lt;/button&gt;&lt;br /&gt;
&lt;script type="text/javascript"&gt;
    var timer = null;
    function showprogress() {
        scilligence.Progress.show("Running", function () { alert("cancelled"); });
        scilligence.Progress.update(0, "Value ")
        var count = 0;
        clearInterval(timer);
        timer = setInterval(function () { scilligence.Progress.update(++count, "Value " + count); }, 500);
    }
&lt;/script&gt;
</pre>
<br /><br /><br />


<hr />
<h3>Upload File</h3>
<button onclick='uploadefile()'>Upload File</button><br />
<script type="text/javascript">
    function uploadefile() {
        var callback = function(ret) { alert(ret.message); };
        scilligence.Utils.uploadFile("Uploade File", "Please upload attachments", "Service.aspx", callback, { project: "HIV" }, null, true);
    }
</script>
<div><br />Source Code:</div>
<pre style="background:#eee;margin-top:0">
&lt;button onclick='uploadefile()'&gt;Upload File&lt;/button&gt;&lt;br /&gt;
&lt;script type="text/javascript"&gt;
    function uploadefile() {
        var callback = function (ret) { alert(ret.message); };
        scilligence.Utils.uploadFile("Uploade File", "Please upload attachments", "Service.aspx", callback, { project: "HIV" }, null, true);
    }
&lt;/script&gt;
</pre>
<br /><br /><br />



<hr />
<h3>Picture in Form</h3>
<div id='Div6'></div>
<script type="text/javascript">
    scil.ready(function() {
        var columns = {
            name: { label: "Compound Name", type: "input", width: 800 },
            pic: { label: "Picture", type: "image", width: 200, options: {} },
            vendor: { label: "Vendor", type: "select", options: ["Company A", "Company B"], width: 300 },
            amount: { label: "Amount", type: "number", unit: "g", width: 200 }
        };
        var form = new scil.Form();
        form.render(scil.byId("Div6"), columns, { immediately: true });
    });
</script>
<div><br />Source Code:</div>
<pre style="background:#eee;margin-top:0">
&lt;div id='Div6'&gt;&lt;/div&gt;
&lt;script type="text/javascript"&gt;
    scil.ready(function () {
        var columns = {
            name: { label: "Compound Name", type: "input", width: 800 },
            pic: { label: "Picture", type: "image", width: 400, options: {} },
            vendor: { label: "Vendor", type: "select", options: ["Company A", "Company B"], width: 300 },
            amount: { label: "Amount", type: "number", unit: "g", width: 200 }
        };
        var form = new scil.Form();
        form.render(scil.byId("Div6"), columns, { immediately: true });
    });
&lt;/script&gt;
</pre>


<hr />
<h3>File in Form</h3>
<div id='Div7'></div>
<script type="text/javascript">
    scil.ready(function() {
        var columns = {
            name: { label: "Compound Name", type: "input", width: 800 },
            file: { label: "Attachment", type: "file", width: 400, options: {} },
            table: { label: "Table", type: "table", columns: {
                assay: { label: "Assay", type: "input", width: 300 },
                ic50: { label: "IC50", type: "number", width: 100 },
                curve: { label: "Curve", type: "file", width: 200 }
            }
            }
        };
        var form = new scil.Form();
        form.render(scil.byId("Div7"), columns, { immediately: true });
    });
</script>
<div><br />Source Code:</div>
<pre style="background:#eee;margin-top:0">
&lt;div id='Div7'&gt;&lt;/div&gt;
&lt;script type="text/javascript"&gt;
    scil.ready(function () {
        var columns = {
            name: { label: "Compound Name", type: "input", width: 800 },
            file: { label: "Attachment", type: "file", width: 200, options: {} },
            table: { label: "Table", type: "table", columns: {
                assay: { label: "Assay", type: "input", width: 300 },
                ic50: { label: "IC50", type: "number", width: 100 },
                curve: { label: "Curve", type: "file", width: 200 }
            }
            }
        };
        var form = new scil.Form();
        form.render(scil.byId("Div7"), columns, { immediately: true });
    });
&lt;/script&gt;
</pre>
<br /><br /><br />









<hr />
Copyright 2016,  Scilligence (<a href='http://www.scilligence.com/'>http://www.scilligence.com/</a>)
<br />
<br />
<b>License:</b>
<ul>
<li>Free for education (<a href='http://www.scilligence.com/web/download.aspx?prod=JSDraw'>Download</a>)</li>
<li>Please <a href='http://www.scilligence.com/web/contact.aspx'>contact us</a> for commercial licenses</li>
</ul>    


</body>
</html>
